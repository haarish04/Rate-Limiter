A simple txt file to keep track of my progress and how I designed this application

Initially tried to setup a web server using elysia.js just as a way of experimenting new tools but faced some issues when I tried setting it up and hence decided to go for the classic node + express
A simple express app was hosted on port 3000 and some basic routes were setup.

The next step was to setup postman to test the API endpoints were working or not.
Setup postman extension on vscode for testing. Created new collection called testing to test all the routes. With this the basic web server has been hosted with basic routes along with Postman testing setup.
Running performance tests is not available in the extension, so had to boot up the Postman client for it.

Setup all the endpoints in one collection and run performance test by setting up the number of virtual users and time duration. To stress test the API, ramp up the virtual users.

Now moving onto the rate limiting algorithm, there are a number of algorithms to pick from. I will be trying out a few of them such as:

Token Bucket: Tokens are added to a ‘bucket’ at a fixed rate. The bucket has a fixed capacity. When a request is made it will only be accepted if there are enough tokens in the bucket. Tokens are removed from the bucket when a request is accepted.
Fixed window counter - Record the number of requests from a sender occurring in the rate limit’s fixed time interval, if it exceeds the limit the request is rejected.
Sliding window counter - Similar to the fixed window, but each request is timestamped and the window slides.

